!function(e,r){"object"==typeof exports?module.exports=exports=r(require("./core"),require("./sha1")):"function"==typeof define&&define.amd?define(["./core","./sha1"],r):r(e.CryptoJS)}(this,function(e){return function(){var r=e,t=r.lib,i=t.Base,o=r.algo,n=o.PBKDF1=i.extend({cfg:i.extend({keySize:4,hasher:o.SHA1,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,r){var t=this.cfg,i=t.hasher.create(),o=t.keySize,n=t.iterations,c=i.update(e).finalize(r);i.reset();for(var s=1;n>s;s++)c=i.finalize(c),i.reset();var a=4*o;if(!(a<=c.sigBytes))throw new Error("Key size cannot be longer than the hash");return c.sigBytes=a,c}});r.PBKDF1=function(e,r,t){return n.create(t).compute(e,r)}}(),e.PBKDF1});